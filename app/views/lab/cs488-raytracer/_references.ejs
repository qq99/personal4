<section id="references" class='anchored'>
  <h1><a href="#references">References & Acknowledgements</a></h1>
  <p>Not all of the following were used directly in the implementation of the project, but they were definitely of use to me (I saved them to disk).  I'd like to thank these authors for their great work, and apologize to anyone I forgot to mention here.  Most of these are definitely areas for future research for myself.</p>
  <h2>Papers</h2>
  <ul>
    <li>Agu, E., Hill Jr., F S. (2003). A simple method for ray tracing diffraction.</li>
    <li>Blinn, J F. (1978). Simulation of wrinkled surfaces. ACM SIGGRAPH Computer Graphics, 12(3).</li>
    <li>Cabeleira, J. Combining rasterization and ray tracing techniques to approximate global illumination in real-time.</li>
    <li>Christensen, P H. (2010). Point-based global illumination for movie production. SIGGRAPH 2010 Course, Retrieved from http://graphics.pixar.com/library/PointBasedGlobalIlluminationForMovieProduction/paper.pdf</li>
    <li>Green, R. (2003). Spherical harmonic lighting: the gritty details. Sony Computer Entertainment America technical memo.</li>
    <li>Gritz, L. and Hahn, J K. BMRT: a global illumination implementation of the RenderMan standard. Journal of Graphics Tools, Vol. 1, No. 3, pp. 29-47 (1996).</li>
    <li>Gustavson, S. (2005, March 22). Simplex noise demystified.</li>
    <li>Peercy, M., Airey, J., & Cabral, B. Efficient bump mapping hardware.</li>
    <li>Walter, B., Marschner, S R., Hongsong, L., & Torrance, K E. (2007). Microfacet models for refraction through rough surfaces. Eurographics Symposium on Rendering (2007).</li>
  </ul>
  <h2>Web References</h2>
  <ul>
    <li>
      Bourke, P. (2000, January).
      <a href='http://paulbourke.net/texture_colour/perlin/'>Perlin noise and turbulence.</a>
    </li>
    <li>
      Martin, A. (n.d.).
      <a href='http://web.cs.wpi.edu/~matt/courses/cs563/talks/dist_ray/dist.html'>Distributed ray tracing.</a>
    </li>
    <li>
      Owen, G. S. (1998, April 01).
      <a href='http://www.siggraph.org/education/materials/HyperGraph/raytrace/rtinter3.htm'>Ray - box intersection.</a>
    </li>
    <li>
      Rademacher, P. (n.d.).
      <a href='http://www.cs.unc.edu/~rademach/xroads-RT/RTarticle.html'>Ray tracing: graphics for the masses.</a>
    </li>
    <li>
      <a href='http://www.codermind.com/articles/Raytracer-in-C++-Part-III-Textures.html'>A raytracer in C++</a>
    </li>
  </ul>
</section>
