<section id='references'>
  <h1><a href="#references">References & Acknowledgements</a></h1>
  <p>The following were of use to me in the implementation of this project.  I'd like to thank these authors for their great work, and apologize to anyone I forgot to mention here; I've probably forgot many in my haste.</p>
  <h2>Papers</h2>
  <ul>
    <li>Blinn, J F. (1978). Simulation of wrinkled surfaces. ACM SIGGRAPH Computer Graphics, 12(3).</li>
    <li>Gustavson, S. (2005, March 22). Simplex noise demystified.</li>
    <li>Vlachos, A. Isidoro, J. Oat, C.  Rippling Reflective and Refractive Water.  ATI Research.</li>
  </ul>
  <h2>Web References</h2>
  <ul>
    <li>
      Cameron, A. Procedural Textures.
      <a href='http://anthonycameron.com/lab#texture'>http://anthonycameron.com/lab#texture</a>
    </li>
    <li>
      Finch, M.  Effective Water Simulation from Physical Models.  GPU Gems.
      <a href='http://http.developer.nvidia.com/GPUGems/gpugems_ch01.html'></a>
    </li>
    <li>
      Using textures in WebGL.  Mozilla Developer Network.
      <a href='https://developer.mozilla.org/en/WebGL/Using_textures_in_WebGL'>https://developer.mozilla.org/en/WebGL/Using_textures_in_WebGL</a>
    </li>
    <li>
      WebGL Lesson 16 â€“ rendering to textures
      <a href='http://learningwebgl.com/blog/?p=1786'>http://learningwebgl.com/blog/?p=1786</a>
    </li>
    <li>
      Screen Space Ambient Occlusion Shader
      <a href='http://www.coniserver.net/wiki/index.php/Screen_Space_Ambient_Occlusion_Shader'>http://www.coniserver.net/wiki/index.php/Screen_Space_Ambient_Occlusion_Shader</a>
    </li>
    <li>
      Bourke, P. (2000, January).
      <a href='http://paulbourke.net/texture_colour/perlin/'>Perlin noise and turbulence.</a>
    </li>
    <li>
      Procedural Content Generation Wiki
      <a href='http://pcg.wikidot.com/'>http://pcg.wikidot.com/</a>
    </li>
    <li>
      Perlin, K.
      Implementing Improved Perlin Noise. GPU Gems.
      <a href='http://http.developer.nvidia.com/GPUGems/gpugems_ch05.html'>http://http.developer.nvidia.com/GPUGems/gpugems_ch05.html</a>
    </li>
    <li>
      Green, S.
      Implementing Improved Perlin Noise. GPU Gems.
      <a href='http://http.developer.nvidia.com/GPUGems2/gpugems2_chapter26.html'>http://http.developer.nvidia.com/GPUGems2/gpugems2_chapter26.html</a>
    </li>
    <li>
      Young, S.
      Terrains, Part 1,
      <a href='http://www.shamusyoung.com/twentysidedtale/?p=141'>http://www.shamusyoung.com/twentysidedtale/?p=141</a>
    </li>
    <li>
      Minecraft Like Rendering Experiments in OpenGL 4,
      <a href='http://codeflow.org/entries/2010/dec/09/minecraft-like-rendering-experiments-in-opengl-4/'>http://codeflow.org/entries/2010/dec/09/minecraft-like-rendering-experiments-in-opengl-4/</a>
    </li>
    <li>
      More on Minecraft-type world gen,
      <a href='http://www.gamedev.net/blog/33/entry-2227887-more-on-minecraft-type-world-gen/'>http://www.gamedev.net/blog/33/entry-2227887-more-on-minecraft-type-world-gen/</a>
    </li>
  </ul>
</section>
